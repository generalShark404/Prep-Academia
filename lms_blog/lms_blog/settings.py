"""
Django settings for lms_blog project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

#Dont run with debug on 
from pathlib import Path
import os
from datetime import timedelta
from django.conf import settings
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3yw4z+%4d#h5l6&n1hq9pxi5*7)rw-!y1%881i$i1982%xknix'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

SITE_ID=1
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',

    # Third party apps
    'rest_framework_simplejwt.token_blacklist',
    'rest_framework',
    'rest_framework.authtoken',
    'ckeditor',
    'corsheaders',

    # My apps
     'main',
     'instructor',
     'student',
     'quiz',
     'account',
]



CKEDITOR_5 = {
    'plugin': 'ckeditor5',  # This tells Django to use CKEditor 5
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'main.middleware.CSRFTokenMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware', 
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lms_blog.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lms_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':'dbx',
        'USER':'root',
        'PASSWORD':'',
        'HOST':'127.0.0.1',
        'PORT':'3307'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
# 'rest_framework_simplejwt.authentication.JWTAuthentication',

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SECURE = False
CSRF_USE_SESSSIONS =  False

# SESSION_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False
SESSION_COOKIE_SAMESITE = 'Lax'

CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "token",
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://localhost:3001',
    'http://127.0.0.1:3000',
]

#To create react app = npx create-react-app <appname>

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'alaminhaidaraliyu@gmail.com'
EMAIL_HOST_PASSWORD = 'lorqjdmntcjzosnv'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = 'alaminhaidaraliyu@gmail.com'

AUTH_USER_MODEL = 'account.User'

REST_FRAMEWORK = {
   
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',   
    ),
} 
 
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME':timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME':timedelta(days=1),
    'AUTH_HEADER_TYPES':('Bearer',),
}


# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME':timedelta(minutes=1),
#     'REFRESH_TOKEN_LIFETIME':timedelta(days=10),
#     'ROTATE_REFRESH_TOKENS':True,
#     'BLACKLIST_AFTER_ROTATION':True,
#     'ALGORITHM':'HS256',
#     'SIGNING_KEY':SECRET_KEY,
#     'VERIFYING_KEY':None,
#     'AUTH_HEADER_TYPES':('JWT',),
#     'USER_ID_FIELD':'id',
#     'USER_ID_CLAIM':'user_id',
#     'AUTH_TOKEN_CLASSES':('rest_framework_simplejwt.tokens.AccessToken', ),
#     'TOKEN_TYPE_CLAIM':'token_type'
# }
# SIMPLE_JWT['ALGORITHM'] = 'HS256'
# SIMPLE_JWT['VERIFYING_KEY'] = 'your-secret-key'
# SIMPLE_JWT['USER_ID_FIELD'] = 'id'
# SIMPLE_JWT['SIGNING_KEY'] = 'your-signing-key'
# SIMPLE_JWT['ACCESS_TOKEN_CLASSES'] = ('main.tokens.CustomAccessToken',)